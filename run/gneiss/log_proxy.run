build "core init gneiss/test/log_proxy gneiss/test/hello_world"

create_boot_directory

install_config {
	<config verbose="yes">
		<parent-provides>
			<service name="LOG"/>
			<service name="PD"/>
			<service name="CPU"/>
			<service name="ROM"/>
		</parent-provides>
		<default-route>
			<any-service> <parent/> </any-service>
		</default-route>
		<default caps="50"/>
                <start name="test-gneiss_log_proxy" caps="100">
                    <provides>
                        <service name="LOG"/>
                    </provides>
                    <resource name="RAM" quantum="10M"/>
                </start>
                <start name="test-gneiss_hello_world" caps="150">
                    <resource name="RAM" quantum="10M"/>
                    <route>
                        <service name="LOG"><child name="test-gneiss_log_proxy"/></service>
                        <any-service><parent/></any-service>
                    </route>
		</start>
	</config>
}

build_boot_image "core ld.lib.so init spark.lib.so gneiss.lib.so basalt.lib.so test-gneiss_log_proxy test-gneiss_hello_world"

append qemu_args "-nographic "
append xen_args  { sdl="0" }

run_genode_until "\"test-gneiss_hello_world\" exited with exit value 0.*\n" 20
