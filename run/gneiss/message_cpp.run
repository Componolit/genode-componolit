build "core init gneiss/test/message_client_cpp gneiss/test/message_server"

create_boot_directory

install_config {
	<config verbose="yes">
		<parent-provides>
			<service name="LOG"/>
			<service name="PD"/>
			<service name="CPU"/>
			<service name="ROM"/>
		</parent-provides>
		<default-route>
			<any-service> <parent/> <any-child/> </any-service>
		</default-route>
		<default caps="100"/>
                <start name="test-gneiss_message_client_cpp">
                    <resource name="RAM" quantum="10M"/>
                </start>
                <start name="test-gneiss_message_server">
                    <resource name="RAM" quantum="10M"/>
                    <provides>
                        <service name="Gneiss_Message"/>
                    </provides>
                </start>
	</config>
}

build_boot_image "core ld.lib.so spark.lib.so basalt.lib.so gneiss.lib.so gneiss_cpp.lib.so init test-gneiss_message_client_cpp test-gneiss_message_server"

append qemu_args "-nographic "
append xen_args  { sdl="0" }

run_genode_until ".*exited with exit value 0.*\n" 20
grep_output {\[init -\> test-gneiss_message_client_cpp}

compare_output_to {
[init -> test-gneiss_message_client_cpp] Sent: Hello World!
[init -> test-gneiss_message_client_cpp] Received: Hello World!
}
