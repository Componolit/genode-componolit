build "core init gneiss/test/hello_world"

create_boot_directory

install_config {
	<config>
		<parent-provides>
			<service name="LOG"/>
			<service name="PD"/>
			<service name="CPU"/>
			<service name="ROM"/>
		</parent-provides>
		<default-route>
			<any-service> <parent/> </any-service>
		</default-route>
		<default caps="60"/>
		<start name="test-hello_world">
                    <binary name="test-gneiss_hello_world"/>
                    <resource name="RAM" quantum="2M"/>
		</start>
	</config>
}

build_boot_image "core ld.lib.so spark.lib.so basalt.lib.so gneiss.lib.so init test-gneiss_hello_world"

append qemu_args "-nographic "
append xen_args  { sdl="0" }

run_genode_until ".*exited with exit value 0.*\n" 20

grep_output {\[init -\> test-hello_world}

compare_output_to {
[init -> test-hello_world -> log_hello_world] Hello World!
[init -> test-hello_world -> log_hello_world] Warning: Hello World!
[init -> test-hello_world -> log_hello_world] Error: Hello World!
[init -> test-hello_world -> log_hello_world] Destructing...
}
